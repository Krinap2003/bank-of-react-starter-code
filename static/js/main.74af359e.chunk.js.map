{"version":3,"sources":["components/logo.svg","components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","toFixed","Component","Home","className","src","logo","alt","to","id","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","addCreditItem","currentDate","Date","toISOString","substring","useState","description","amount","date","formData","setFormData","prevData","test","style","fontSize","textAlign","map","item","index","trim","placeholder","Debits","debits","debit","slice","addDebit","App","logInInfo","newUser","currentUser","fetchCreditList","axios","get","then","response","newCreditList","data","creditList","totalCredits","calculateTotalCredits","catch","error","console","updateAccountBalance","newBalance","total","newItem","prevState","parseFloat","debitList","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74af359e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance and round it to 2 decimal places\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance.toFixed(2)}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport logo from './logo.svg';\nimport AccountBalance from './AccountBalance';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"homeContainer\">\n        <nav className='nav'>\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <Link to=\"/userProfile\" id=\"link\">User Profile</Link>\n          <Link to=\"/login\" id=\"link\">Login</Link>\n          <Link to=\"/credits\" id=\"link\">Credits</Link>\n          <Link to=\"/debits\" id=\"link\">Debits</Link>\n        </nav>\n        <p id=\"welcome\">Welcome to Bank of React</p>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <AccountBalance accountBalance={this.props.accountBalance} />\n      </div>\n    )\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\n\nconst Credits = ({ credits, accountBalance, addCreditItem }) => {\n  //Get Current Date\n  const currentDate = new Date().toISOString().substring(0, 10);\n\n  // Initialize state\n  const [formData, setFormData] = useState({\n    description: '',\n    amount: '',\n    date: currentDate\n  });\n\n  // Function to update form data when user inputs something\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    // Check the name of the input field\n    if (name === 'description') {\n      setFormData(prevData => ({\n        ...prevData,\n        description: value\n      }));\n    }\n    else if (name === 'amount') {\n      // Validate input to allow only decimal numbers or empty string\n      if (/^\\d*\\.?\\d*$/.test(value) || value === '') {\n        setFormData(prevData => ({\n          ...prevData,\n          amount: value\n        }));\n      }\n    }\n  };\n\n  // Function that calls the addCreditItem function in App.js once user hits the submit button\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Check if either description or amount is not empty\n    if (formData.description.trim() !== '' && formData.amount.trim() !== '') {\n      // Call the addCreditItem function passed from props with the form data\n      addCreditItem(formData);\n    }\n    // Clear the form fields\n    setFormData({\n      description: '',\n      amount: '',\n      date: currentDate\n    });\n  };\n\n  return (\n    <>\n      {/* Navigation Bar */}\n      <div className=\"homeContainer\">\n        <nav className='nav'>\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <Link to=\"/userProfile\" id=\"link\">User Profile</Link>\n          <Link to=\"/login\" id=\"link\">Login</Link>\n          <Link to=\"/credits\" id=\"link\">Credits</Link>\n          <Link to=\"/debits\" id=\"link\">Debits</Link>\n        </nav>\n      </div>\n\n      {/* Credit Page */}\n      <div className='container'>\n        <div className='left-side'>\n          <h3 style={{ fontSize: '1.5vw' }}>Accont Balance: {accountBalance}</h3>\n        </div>\n        <h2 className='vr'>&nbsp;</h2>\n        <br />\n\n        <div className='right-side'>\n          <h1 style={{ fontSize: '2vw', textAlign: 'left' }}>Credits</h1>\n          {/* Display Credit List */}\n          <ul>\n            {credits && credits.map((item, index) => (\n              <li className='list' key={index}>\n                {item.amount}\n                &nbsp;&nbsp;&nbsp;\n                {item.description}\n                &nbsp;&nbsp;&nbsp;\n                {new Date(item.date).toISOString().substring(0, 10)}\n              </li>\n            ))}\n          </ul>\n          {/* Form Input Boxes */}\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              placeholder=\"Description\"\n            />\n            <input\n              type=\"text\"\n              name=\"amount\"\n              value={formData.amount}\n              onChange={handleChange}\n              placeholder=\"Amount\"\n            />\n            <button type=\"submit\">Add Credit</button>\n          </form>\n\n          <Link to=\"/\">Return to Home</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser };\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser })\n  }\n\n  // Function to fetch credit list from API and update state\n  fetchCreditList = () => {\n    axios.get('https://johnnylaicode.github.io/api/credits.json')\n      .then(response => {\n        // Assuming the response data is an array of credit items\n        const newCreditList = response.data;\n        this.setState({ creditList: newCreditList });\n\n        const totalCredits = this.calculateTotalCredits(newCreditList); // Calculate total credits\n        this.setState({ newCreditList, accountBalance: totalCredits }); // Update state with credits and account balance\n      })\n      .catch(error => {\n        console.error('Error fetching credit list:', error);\n      });\n  }\n\n  // Function to update account balance with new balance.\n  updateAccountBalance = (newBalance) => {\n    this.setState({ accountBalance: newBalance });\n  }\n\n  // Function to calculate the total number of credits for each credit on the list\n  calculateTotalCredits = (credits) => {\n    let total = 0;\n    for (const credit of credits) {\n      total += credit.amount;\n    }\n    return total;\n  }\n\n  // Function to update the creditList state and accountBalance state after a user adds a new credit to the list\n  addCreditItem = (newItem) => {\n    this.setState(prevState => ({\n      creditList: [...prevState.creditList, newItem]\n    }));\n    // Calculate new balance after a new credit is added\n    const newBalance = parseFloat((this.state.accountBalance + parseFloat(newItem.amount)).toFixed(2));\n    this.setState({ accountBalance: newBalance });\n  };\n\n  componentDidMount() {\n    // Fetch credit list when component mounts\n    this.fetchCreditList();\n    // Fetch account balance when component mounts\n    this.updateAccountBalance(0);\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCreditItem={this.addCreditItem} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />)\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-starter-code\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}